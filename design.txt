"Mettle"

Game Design Document
________________
Sean Anderson
________________
Index

________________
Index
1. Index
2. Game Design
   1. Summary
   2. Gameplay
   3. Mindset
1. Technical
   1. Screens
   2. Controls
   3. Mechanics
1. Level Design
   1. Themes
      1. Ambience
      2. Objects
         1. Ambient
         2. Interactive
      1. Challenges
   1. Game Flow
1. Development
   1. Abstract Classes
   2. Derived Classes
1. Graphics
   1. Style Attributes
   2. Graphics Needed
1. Sounds/Music
   1. Style Attributes
   2. Sounds Needed
   3. Music Needed
1. Schedule


________________



Game Design

________________
Summary
        In a post-apocalyptic world, rogue groups struggle for resources with the remnants of technology and a bit of magic.  Use turn based squad tactics in the style of xcom in order to survive.
Gameplay
        The player will command a 4 person squad of refugees.  They must fight against other small groups of enemies in a tiled map.  Some of the scenarios will involve them setting up a defense before the enemies arrive, while others will involve getting to an endpoint, and others eliminating a position.  Stealth elements will be present in the mechanics in order to provide multiple ways to achieve objectives.  In addition, players will be able to use items in order to win, like grenades, rockets, and potions.  They will also use a variety of skills such as supression, local teleportation, and magical stuns and spells.
Mindset
        The player should feel weak throughout the game, as if they are only one step ahead of inevitable doom.  This means a power scale of 1-10 instead of 1-1000.  At the beginning, the player must be fighting to barely survive; when they begin to get comfortable, throw a wrench in the gears.


________________



Technical
________________
Screens
1. Title Screen
   a. Options
   b. Start
   c. Load
2. Game
   a. Pre-Battle/Inventory
   c. Planning screen (Obstacle/Resource placement)
   b. Assessment / Next Level
3. End Credits
Controls
        The player will be able to select units using the mouse, as well as tab through them.  When selected, they may be ordered to a psition using the mouse, or they may perform a number of actions which will be displayed at the bottom of the hud.  Their health will be visible above their head in-game, as well as above the list of actions.  The camera may be panned using edge-scrossing or wasd keys.
Mechanics
		Time
			Each unit has charge time (CT).  Every time unit, the ct of all units increases by 1.  When a unit's ct reaches 100, the unit can act.  Acting decreases the amount of ct a unit has.  Doing nothing automatically takes 50 ct.  In general, taking one move takes 25 ct, and attacking takes 25 ct.  Most actions also take 25 ct, but this could vary depending on perks.  Ct can go below 0, but the turn ends when it does.  If the player chooses to end a turn with extra ct, that ct is not reset to 0.
		Health
			Characters will have around 100 health by default.  A typical hit will deal 1/3 of their health in damage.
		Weapons
			Weapons have 3 classes: heavy, medium, and light.  Characters will have primary and secondary slots for weapons.  Depending on their class, they may only carry weapons which their primary and secondary slots can hold.  In general, heavy weapons are better than medium weapons are better than light weapons.  Movement is decreased by 1 for every class of weapon caried.  For example, someone with a base movement of 10 carrying a medium weapon and a light weapon would have a movement speed of 7.
		Stats


________________



Level Design
________________
(Note : These sections can safely be skipped if they’re not relevant, or you’d rather go about it another way. For most games, at least one of them should be useful. But I’ll understand if you don’t want to use them. It’ll only hurt my feelings a little bit.)
Themes
1. Forest
   1. Mood
      1. Dark, calm, foreboding
   1. Objects
      1. Ambient
         1. Fireflies
         2. Beams of moonlight
         3. Tall grass
      1. Interactive
         1. Wolves
         2. Goblins
         3. Rocks
1. Castle
   1. Mood
      1. Dangerous, tense, active
   1. Objects
      1. Ambient
         1. Rodents
         2. Torches
         3. Suits of armor
      1. Interactive
         1. Guards
         2. Giant rats
         3. Chests
(example)


________________


Game Flow
1. Player starts in forest
2. Pond to the left, must move right
3. To the right is a hill, player jumps to traverse it (“jump” taught)
4. Player encounters castle - door’s shut and locked
5. There’s a window within jump height, and a rock on the ground
6. Player picks up rock and throws at glass (“throw” taught)
7. … etc.
(example)


________________



Development
________________
Abstract Classes / Components
1. BasePhysics
   1. BasePlayer
   2. BaseEnemy
   3. BaseObject
1. BaseObstacle
2. BaseInteractable
(example)
________________


Derived Classes / Component Compositions
1. BasePlayer
   1. PlayerMain
   2. PlayerUnlockable
1. BaseEnemy
   1. EnemyWolf
   2. EnemyGoblin
   3. EnemyGuard (may drop key)
   4. EnemyGiantRat
   5. EnemyPrisoner
1. BaseObject
   1. ObjectRock (pick-up-able, throwable)
   2. ObjectChest (pick-up-able, throwable, spits gold coins with key)
   3. ObjectGoldCoin (cha-ching!)
   4. ObjectKey (pick-up-able, throwable)
1. BaseObstacle
   1. ObstacleWindow (destroyed with rock)
   2. ObstacleWall
   3. ObstacleGate (watches to see if certain buttons are pressed)
1. BaseInteractable
   1. InteractableButton
(example)
________________



Graphics
________________
Style Attributes
What kinds of colors will you be using? Do you have a limited palette to work with? A post-processed HSV map/image? Consistency is key for immersion.


What kind of graphic style are you going for? Cartoony? Pixel-y? Cute? How, specifically? Solid, thick outlines with flat hues? Non-black outlines with limited tints/shades? Emphasize smooth curvatures over sharp angles? Describe a set of general rules depicting your style here.


        Well-designed feedback, both good (e.g. leveling up) and bad (e.g. being hit), are great for teaching the player how to play through trial and error, instead of scripting a lengthy tutorial. What kind of visual feedback are you going to use to let the player know they’re interacting with something? That they *can* interact with something?


________________


Graphics Needed
1. Characters
   1. Human-like
      1. Goblin (idle, walking, throwing)
      2. Guard (idle, walking, stabbing)
      3. Prisoner (walking, running)
   1. Other
      1. Wolf (idle, walking, running)
      2. Giant Rat (idle, scurrying)
1. Blocks
   1. Dirt
   2. Dirt/Grass
   3. Stone Block
   4. Stone Bricks
   5. Tiled Floor
   6. Weathered Stone Block
   7. Weathered Stone Bricks
1. Ambient
   1. Tall Grass
   2. Rodent (idle, scurrying)
   3. Torch
   4. Armored Suit
   5. Chains (matching Weathered Stone Bricks)
   6. Blood stains (matching Weathered Stone Bricks)
1. Other
   1. Chest
   2. Door (matching Stone Bricks)
   3. Gate
   4. Button (matching Weathered Stone Bricks)
(example)

(Note : If you’re soloing you might not need to define this part, as you can just use the Derived Classes + Themes section as a reference. It’s up to you.)


________________



Sounds/Music
________________
Style Attributes
        Again, consistency is key. Define that consistency here. What kind of instruments do you want to use in your music? Any particular tempo, key? Influences, genre? Mood?


Stylistically, what kind of sound effects are you looking for? Do you want to exaggerate actions with lengthy, cartoony sounds (e.g. mario’s jump), or use just enough to let the player know something happened (e.g. mega man’s landing)? Going for realism? You can use the music style as a bit of a reference too.

        Remember, auditory feedback should stand out from the music and other sound effects so the player hears it well. Volume, panning, and frequency/pitch are all important aspects to consider in both music and sounds - so plan accordingly!


________________


Sounds Needed
1. Effects
   1. Soft Footsteps (dirt floor)
   2. Sharper Footsteps (stone floor)
   3. Soft Landing (low vertical velocity)
   4. Hard Landing (high vertical velocity)
   5. Glass Breaking
   6. Chest Opening
   7. Door Opening
1. Feedback
   1. Relieved “Ahhhh!” (health)
   2. Shocked “Ooomph!” (attacked)
   3. Happy chime (extra life)
   4. Sad chime (died)
(example)
________________


Music Needed
1. Slow-paced, nerve-racking “forest” track
2. Exciting “castle” track
3. Creepy, slow “dungeon” track
4. Happy ending credits track
5. Rick Astley’s hit #1 single “Never Gonna Give You Up”
(example)


(Note : Again, if you’re soloing you might be able to / want to skip this section. It’s up to you.)
________________



Schedule
________________
(what is a schedule, i don’t even. list is good enough, right? if not add some dates i guess)

1. develop base classes
   1. base entity
      1. base player
      2. base enemy
      3. base block
   1. base app state
      1. game world
      2. menu world
1. develop player and basic block classes
   1. physics / collisions
1. find some smooth controls/physics
2. develop other derived classes
   1. blocks
      1. moving
      2. falling
      3. breaking
      4. cloud
   1. enemies
      1. soldier
      2. rat
      3. etc.
1. design levels
   1. introduce motion/jumping
   2. introduce throwing
   3. mind the pacing, let the player play between lessons
1. design sounds
2. design music
(example)